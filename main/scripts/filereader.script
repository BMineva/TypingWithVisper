local open = io.open
fileContent = {}
fileContent[1] = {}

local function read_file(path)
	local file = open(path, "rb") -- r read mode and b binary mode
	if not file then return nil end
	local content = {}
	print(type(content))
	content = file:read "*l"  -- *a or *all reads the whole file
	content = mysplit(content, "@")
	print(type(content))
	for i in ipairs(content) do
		content[i] = mysplit(content[i],",")
	end
	file:close()
	return content
end
-- function to print the line mre clearly
 local function dump(o)
	if type(o) == 'table' then
		local s = '{ '
		for k,v in pairs(o) do
			if type(k) ~= 'number' then k = '"'..k..'"' end
			s = s .. '['..k..'] = ' .. dump(v) .. ','
		end
		return s .. '} '
	else
		return tostring(o)
	end
end

function mysplit (inputstr, sep)
	if sep == nil then
		sep = "%s"
	end
	local t={}
	for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
		table.insert(t, str)
	end
	return t
end


function on_message(self, message_id, message, sender)
	if message_id == hash("read") then
		local fileContent = read_file("difficulty1.txt");
		print (dump (fileContent))
		print(type(fileContent[1][2]))
		print(fileContent[1][2])
	end
end
